// Code generated by mockery v2.52.2. DO NOT EDIT.

package mocks

import (
	pop3srv "github.com/pkierski/pop3srv"
	mock "github.com/stretchr/testify/mock"
)

// MailboxProvider is an autogenerated mock type for the MailboxProvider type
type MailboxProvider struct {
	mock.Mock
}

// Provide provides a mock function with given fields: user
func (_m *MailboxProvider) Provide(user string) (pop3srv.Mailbox, error) {
	ret := _m.Called(user)

	if len(ret) == 0 {
		panic("no return value specified for Provide")
	}

	var r0 pop3srv.Mailbox
	var r1 error
	if rf, ok := ret.Get(0).(func(string) (pop3srv.Mailbox, error)); ok {
		return rf(user)
	}
	if rf, ok := ret.Get(0).(func(string) pop3srv.Mailbox); ok {
		r0 = rf(user)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(pop3srv.Mailbox)
		}
	}

	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(user)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewMailboxProvider creates a new instance of MailboxProvider. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMailboxProvider(t interface {
	mock.TestingT
	Cleanup(func())
}) *MailboxProvider {
	mock := &MailboxProvider{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
